#
# {{ ansible_managed }}
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1
set $meta Mod4

set_from_resource $darkred      color1          #000000
set_from_resource $red          color9          #000000
set_from_resource $darkgreen    color2          #000000
set_from_resource $green        color10         #000000
set_from_resource $darkyellow   color3          #000000
set_from_resource $yellow       color11         #000000
set_from_resource $darkblue     color4          #000000
set_from_resource $blue         color12         #000000
set_from_resource $darkmagenta  color5          #000000
set_from_resource $magenta      color13         #000000
set_from_resource $darkcyan     color6          #000000
set_from_resource $cyan         color14         #000000
set_from_resource $darkwhite    color7          #000000
set_from_resource $white        color15         #000000
set_from_resource $black        color8          #282828
set_from_resource $darkblack    color0          #1d2021
set_from_resource $accent       cursorColor     #0f0f0f
set_from_resource $accentFg     foreground      #ffffff
set_from_resource $accentBg     background      #000000
set               $transparent                  #00000000

# RIP titlebars ;'(
for_window [class="^.*"] border pixel 0

# custom window settings
for_window [title="Authy"] floating enable
for_window [class="^(s|S)hutter"] floating enable
for_window [class="^(gl|mpv)"] floating enable, move scratchpad
for_window [class="^Enpass"] floating enable, move scratchpad

# graphics glitch?
new_window none

# Gaps config
set $default_gaps_inner 15
set $default_gaps_outer 10

gaps inner $default_gaps_inner
gaps outer $default_gaps_outer

workspace_auto_back_and_forth yes
force_display_urgency_hint 0 ms
focus_on_window_activation urgent

# smart_gaps on
smart_borders on

# Shamelessly stolen styling from Airblader/dotfiles-manjaro.
#                       BORDER      BACKGROUND  TEXT        INDICATOR   CHILD_BORDER
client.focused          $black      $black      $darkwhite  $darkblack  $darkblack
client.unfocused        $black      $black      $white      $darkblack  $darkblack
client.focused_inactive $black      $black      $white      $darkblack  $darkblack
client.urgent           $darkred    $darkred    $black      $darkred    $darkred
client.background       $black

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Run the XRandR screenlayout for multi-display.
exec --no-startup-id "sh -c '{{ lookup('env', 'HOME') }}/.screenlayout/default.sh'"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec --no-startup-id {{ system.terminal_emulator | default('terminology') }}

# kill focused window
bindsym $mod+Shift+q kill

# start some program launcher
bindsym $mod+d exec --no-startup-id {{ i3.launcher | default('dmenu_run') }}
bindsym $meta+d exec --no-startup-id {{ i3.dex_launcher | default('i3-dmenu-desktop') }}

# do screenshots
bindsym $mod+t exec --no-startup-id "teiler --screenshot"

# scratchpad bindings
bindsym $mod+minus scratchpad show
bindsym $mod+Shift+minus move scratchpad

# music controls
bindsym XF86AudioRaiseVolume exec --no-startup-id "pactl set-sink-volume {{ pulseaudio.device }} +5%"
bindsym XF86AudioLowerVolume exec --no-startup-id "pactl set-sink-volume {{ pulseaudio.device }} -5%"
bindsym XF86AudioMute exec --no-startup-id "pactl set-sink-mute {{ pulseaudio.device }} toggle"
bindsym XF86MonBrightnessUp exec --no-startup-id "{{ lookup('env', 'HOME') }}/.bash/brightness.sh +5"
bindsym XF86MonBrightnessDown exec --no-startup-id "{{ lookup('env', 'HOME') }}/.bash/brightness.sh -5"
bindsym XF86AudioPlay exec --no-startup-id "/usr/bin/env playerctl play-pause"
bindsym XF86AudioStop exec --no-startup-id "/usr/bin/env playerctl stop"
bindsym XF86AudioPrev exec --no-startup-id "/usr/bin/env playerctl previous"
bindsym XF86AudioNext exec --no-startup-id "/usr/bin/env playerctl next"

# reset the X11 keymap to allow for toggling between languages
bindsym $mod+Shift+m exec --no-startup-id "setxkbmap -option grp:switch,{{ xkb.map_toggle }},grp_led:scroll,compose:menu -layout '{{ xkb.layouts }}' -variant '{{ xkb.variants }}'"

# ¯\_(ツ)_/¯
bindsym $meta+Shift+S exec --no-startup-id "echo -n '¯\_(ツ)_/¯' | xclip -i -selection clipboard"
bindsym $meta+Shift+F exec --no-startup-id "echo -n '(ﾉ≧∇≦)ﾉ ﾐ ┸━┸' | xclip -i -selection clipboard"

# lock screen
set $lock_cmd "cinnamon-screensaver-command --lock"
bindsym $meta+l exec --no-startup-id $lock_cmd

# other useful binds
bindsym $meta+e exec "{{ system.file_explorer }}"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# media mode
bindsym $mod+y fullscreen disable; floating enable; resize set 400 300; sticky enable; move window to position 1280 20

# override workspace names
{% for i in range(1, i3.workspace_count) %}
set $WS{{ i }} {{ i }}:
{% endfor %}

# switch to workspace
{% for i in range(1, i3.workspace_count) %}
bindsym $mod+{{ i }} workspace $WS{{ i }}
{% endfor %}

bindsym $mod+Tab workspace back_and_forth

# move focused container to workspace
{% for i in range(1, i3.workspace_count) %}
bindsym $mod+Shift+{{ i }} move container to workspace $WS{{ i }}
{% endfor %}

# Mapping workspaces across multiple monitors
{% for i in range(1, i3.workspace_count) %}
workspace $WS{{ i }} output {{ system.display.primary }}
{% endfor %}

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Gaps mode
set $mode_gaps gaps
set $mode_gaps_outer outer gaps
set $mode_gaps_inner inner gaps

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
    # Change inner or outer gaps through separate modes
    bindsym o       mode "$mode_gaps_outer"
    bindsym i       mode "$mode_gaps_inner"

    # Either set all gaps to 0 or default
    bindsym 0       mode "default", exec --no-startup-id i3-msg "gaps inner current set 0" && i3-msg "gaps outer current set 0"
    bindsym d       mode "default", exec --no-startup-id i3-msg "gaps inner current set $default_gaps_inner" && i3-msg "gaps outer current set $default_gaps_outer"

    bindsym Return  mode "default"
    bindsym Escape  mode "default"
}

mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     mode "default", gaps inner current set 0
    bindsym d     mode "default", gaps inner current set $default_gaps_inner

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     mode "default", gaps inner all set 0
    bindsym Shift+d     mode "default", gaps inner all set $default_gaps_inner

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     mode "default", gaps outer current set 0
    bindsym d     mode "default", gaps outer current set $default_gaps_outer

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     mode "default", gaps outer all set 0
    bindsym Shift+d     mode "default", gaps outer all set $default_gaps_outer

    bindsym Return mode "$mode_gaps"
    bindsym Escape mode "default"
}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    i3bar_command i3bar -t
    status_command python3 ~/.config/i3pystatus/config.py

    mode dock
    position bottom
    font {{ i3.bar.font }}
    tray_padding {{ i3.bar.padding|default('8px') }}

    strip_workspace_numbers yes
    tray_output {{ i3.bar.output|default('primary') }}
    binding_mode_indicator yes

    colors {
        background          $darkblack          # Bar background
        statusline          $darkwhite          # Uncoloured statusline text
        separator           $accent             # Statusline separator color

        focused_workspace   $darkblack           $darkblack         $darkmagenta
        active_workspace    $darkblack           $darkblack         $darkmagenta
        inactive_workspace  $darkblack           $darkblack         $darkwhite
        urgent_workspace    $darkblack           $darkblack         $cyan
        binding_mode        $darkblack           $darkblack         $darkcyan
    }
}
